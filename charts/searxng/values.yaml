## @section Global parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
global:
  ## @param global.imageRegistry Global container image registry
  imageRegistry: ""
  ## @param global.imagePullSecrets Global container registry secret names as an array
  imagePullSecrets: []
  ## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
  defaultStorageClass: ""

## @section Common parameters
## @param nameOverride String to partially override karakeep.fullname template
nameOverride: ""
## @param fullnameOverride String to fully override karakeep.fullname template
fullnameOverride: ""
## @param nodeSelector Node labels for pod assignment
nodeSelector: {}
## @param tolerations Tolerations for pod assignment
tolerations: []
## @param affinity Affinity for pod assignment
affinity: {}

## @param replicaCount Number of replicas to deploy
replicaCount: 1

image:
  registry: ""
  repository: searxng/searxng
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  digest: ""
  pullPolicy: IfNotPresent
  pullSecrets: []

containerPort: 8080

# This is for setting Kubernetes Annotations to a Pod.
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: searxng.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: searxng-tls
  #    hosts:
  #      - searxng.local

httproute:
  enabled: false
  annotations: {}
    # gateway.networking.k8s.io/route-timeout: "30s"
  parentRefs:
    - name: gateway-name
      namespace: gateway-system
  hostnames:
    - searxng.local
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      # weight: 100
      # filters:
      #   - type: RequestHeaderModifier
      #     requestHeaderModifier:
      #       add:
      #         - name: X-Custom-Header
      #           value: custom-value

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

#  The defaults are shown here. Just enable what you need by overwriting the defaults
limiter: |
  [botdetection]

  # The prefix defines the number of leading bits in an address that are compared
  # to determine whether or not an address is part of a (client) network.

  ipv4_prefix = 32
  ipv6_prefix = 48

  # If the request IP is in trusted_proxies list, the client IP address is
  # extracted from the X-Forwarded-For and X-Real-IP headers. This should be
  # used if SearXNG is behind a reverse proxy or load balancer.

  trusted_proxies = [
    '127.0.0.0/8',
    '::1',
    # '192.168.0.0/16',
    # '172.16.0.0/12',
    # '10.0.0.0/8',
    # 'fd00::/8',
  ]

  [botdetection.ip_limit]

  # To get unlimited access in a local network, by default link-local addresses
  # (networks) are not monitored by the ip_limit
  filter_link_local = false

  # activate link_token method in the ip_limit method
  link_token = false

  [botdetection.ip_lists]

  # In the limiter, the ip_lists method has priority over all other methods -> if
  # an IP is in the pass_ip list, it has unrestricted access and it is also not
  # checked if e.g. the "user agent" suggests a bot (e.g. curl).

  block_ip = [
    # '93.184.216.34',  # IPv4 of example.org
    # '257.1.1.1',      # invalid IP --> will be ignored, logged in ERROR class
  ]

  pass_ip = [
    # '192.168.0.0/16',      # IPv4 private network
    # 'fe80::/10'            # IPv6 linklocal / wins over botdetection.ip_limit.filter_link_local
  ]

  # Activate passlist of (hardcoded) IPs from the SearXNG organization,
  # e.g. `check.searx.space`.
  pass_searxng_org = true
