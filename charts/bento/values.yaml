imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

replicaCount: 1

image:
  registry: ghcr.io
  repository: warpstreamlabs/bento
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

nodeSelector: {}
tolerations: []
affinity: {}
hostAliases: []

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Use environment variables to interpolate secrets
config: |
  logger:
    level: DEBUG
    format: logfmt
    add_timestamp: false
    static_fields:
      "@service": bento
  http:
    enabled: true
    address: 0.0.0.0:4195
    root_path: /
    debug_endpoints: true
    cors:
      enabled: false
      allowed_origins: []
  input:
    label: stdin
    stdin: {}
  pipeline:
    processors: []
  output:
    label: stdout
    stdout: {}

# Define environment variables or load specific ones from ConfigMaps and Secrets
# If all environment variables included in a ConfigMap or Secret need to be included, consider using a configMapRef or secretRef below
env: []
# - name: S3_BUCKET
#   value: bucket
# - name: S3_BUCKET
#   valueFrom:
#     configMapKeyRef:
#       name: s3-config
#       key: bucket
# - name: S3_TOKEN
#   valueFrom:
#     secretKeyRef:
#       name: s3-secrets
#       key: token

# Include ConfigMap objects
configMapRefs: []
# - name: s3-config

# Include Secret objects
secretRefs: []
# - name: s3-secrets

# Additional volumes on the output Deployment definition.
extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# initContainers -- Init Containers to be added to the Bento Pods.
initContainers: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /ping
    port: http

readinessProbe:
  httpGet:
    path: /ready
    port: http

service:
  enabled: false
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 4195
      protocol: TCP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
