name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5.0.0
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1

      - name: Prepare GPG key
        env:
          GPG_KEYRING_BASE64: ${{ secrets.GPG_KEYRING_BASE64 }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          gpg_dir=.cr-gpg
          mkdir "$gpg_dir"
          keyring="$gpg_dir/secring.gpg" # Refer keyring to private key of gpg
          base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring" # Store base64 GPG key into keyring
          passphrase_file="$gpg_dir/passphrase"
          echo "$GPG_PASSPHRASE" > "$passphrase_file" # Store passphrase data into a file
          echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV" # Save passphrase into github-environment
          echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV" # Save private key into github-environemnt

      - name: Add repositories
        run: |
          for dir in $(ls -d charts/*/); do
            helm dependency list $dir 2> /dev/null | tail +2 | head -n -1 | awk '{ print "helm repo add " $1 " " $3 }' | while read cmd; do $cmd; done
          done

      - name: Run chart-releaser # Generate new version of helm chart along with some file with extension .prov
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        with:
          config: .github/config/chart-release.yaml
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CR_KEY: ${{ secrets.CR_KEY }}
          CR_SIGN: true
