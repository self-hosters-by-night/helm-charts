# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  registry: ghcr.io
  repository: lldap/lldap
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  # Possible tags:
  #   latest-debian
  #   latest-alpine
  #   latest-debian-rootless
  #   latest-alpine-rootless
  #   yyyy-mm-dd-latest-debian
  #   yyyy-mm-dd-latest-alpine
  #   yyyy-mm-dd-latest-debian-rootless
  #   yyyy-mm-dd-latest-alpine-rootless
  # Check out https://github.com/lldap/lldap/pkgs/container/lldap for a complete list of available tags
  digest: ""
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  pullSecrets: []

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

config:
  # If "" create configMap with Helm values, otherwise specify existing configmap name
  existingConfigMap: ""

  # LLDAP configuration values
  uid: 1000
  gid: 1000
  timezone: "UTC"

  ## Base DN for LDAP.
  ## This is usually your domain name, and is used as a
  ## namespace for your users. The choice is arbitrary, but will be needed
  ## to configure the LDAP integration with other services.
  ## The sample value is for "example.com", but you can extend it with as
  ## many "dc" as you want, and you don't actually need to own the domain
  ## name.
  ldapBaseDn: "dc=example,dc=com"
  ## Admin username.
  ## For the LDAP interface, a value of "admin" here will create the LDAP
  ## user "cn=admin,ou=people,dc=example,dc=com" (with the base DN above).
  ## For the administration interface, this is the username.
  ldapUserDn: "admin" # i.e. cn=admin,ou=people,dc=example,dc=com
  ## Admin email.
  ## Email for the admin account. It is only used when initially creating
  ## the admin user, and can safely be omitted.
  ldapUserEmail: "admin@example.com"

  # LDAPS configuration
  ldaps:
    enabled: false
    certFile: "/path/to/certfile.crt"
    keyFile: "/path/to/keyfile.key"

  # Database configuration
  database:
    # Options: sqlite, postgres (TODO)
    type: "sqlite"
    # For external databases, configure URL
    url: ""
    # Example URLs:
    # postgres://postgres-user:password@postgres-server/my-database

  # SMTP configuration
  smtp:
    enablePasswordReset: false
    server: "smtp.example.com"
    port: 465
    # Options: NONE, TLS, STARTTLS
    encryption: "TLS"
    user: "no-reply@example.com"
    from: "no-reply <no-reply@example.com>"
    to: "admin <admin@example.com>"

# Secret configuration
secrets:
  # If "" create secret with Helm values, otherwise specify existing secret name
  existingSecret: ""

  # Secret values
  jwtSecret: "REPLACE_WITH_RANDOM"
  keySeed: "REPLACE_WITH_RANDOM"
  ldapUserPass: "adminPas$word"
  smtpPassword: "PasswordGoesHere"

# Service configuration
service:
  # Service type
  type: ClusterIP

  # Annotations for the service (useful for cloud provider load balancers)
  annotations: {}
    # service.beta.kubernetes.io/aws-load-balancer-type: nlb
    # service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  # LoadBalancer specific configuration
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
    # - 10.0.0.0/8
    # - 192.168.0.0/16

  # LDAP service configuration
  ldap:
    port: 3890
    # nodePort: 30389  # Only used if service.type is NodePort or LoadBalancer

  # LDAPS service configuration
  ldaps:
    port: 6360
    # nodePort: 30636  # Only used if service.type is NodePort or LoadBalancer

  # HTTP web interface configuration
  webui:
    port: 17170
    # nodePort: 30171  # Only used if service.type is NodePort or LoadBalancer

# Ingress configuration
ingress:
  webui:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: lldap.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
    #  - secretName: lldap-tls
    #    hosts:
    #      - lldap.local

httproute:
  webui:
    enabled: false
    gatewayName: ""
    namespace: ""
    sectionName: ""
    hostnames: []
    annotations: {}
    matches:
      - path:
          type: PathPrefix
          value: "/"
    weight: 1

tcproute:
  ldap:
    enabled: false
    gatewayName: ""
    namespace: ""
    sectionName: ""
    annotations: {}
    weight: 1
  ldaps:
    enabled: false
    gatewayName: ""
    namespace: ""
    sectionName: ""
    annotations: {}
    weight: 1

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: webui

readinessProbe:
  httpGet:
    path: /
    port: webui

persistence:
  # This is to enable persistence for the LDAP data.
  enabled: true
  # This is to use an existing PersistentVolumeClaim.
  existingClaim: ""
  # This is to set the storage class for the PersistentVolumeClaim.
  storageClass: ""
  # This is to set the access mode for the PersistentVolumeClaim.
  accessMode: ReadWriteOnce
  # This is to set the size of the PersistentVolumeClaim.
  size: 10Gi
  # This is to set annotations for the PersistentVolumeClaim.
  annotations: {}

# Additional volumes on the output Deployment definition.
extraVolumes: []
# - name: cert-file
#   secret:
#     secretName: ldap-cert
#     optional: false
# - name: cert-file
#   configMap:
#     name: myconfigmap

# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
#  - name:  cert-file
#    mountPath: "/path/to/certfile.crt"
#   readOnly: true
#  - name: key-file
#    mountPath: "/path/to/keyfile.key"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
