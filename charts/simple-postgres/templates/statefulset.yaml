apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "boilerplate.name" . }}
  {{- with .Values.global.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: "{{ include "boilerplate.name" . }}"
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "boilerplate.labels.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.postgres.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "boilerplate.labels.selectorLabels" . | nindent 8 }}
        {{- with .Values.postgres.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "boilerplate.images.image" (dict "imageRoot" .Values.global.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          {{- with .Values.global.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.configMapRefs .Values.postgres.extraConfigMapRefs .Values.credentials.externalSecret.enabled .Values.secretRefs .Values.postgres.extraSecretRefs }}
          envFrom:
            {{- range .Values.configMapRefs }}
            - configMapRef:
                name: {{ .name }}
            {{- end }}
            {{- range .Values.postgres.extraConfigMapRefs }}
            - configMapRef:
                name: {{ .name }}
            {{- end }}
            {{- with .Values.credentials.externalSecret }}
            - secretRef:
                name: {{ .name }}
            {{- end }}
            {{- range .Values.secretRefs }}
            - secretRef:
                name: {{ .name }}
            {{- end }}
            {{- range .Values.postgres.extraSecretRefs }}
            - secretRef:
                name: {{ .name }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            {{- with .Values.postgres.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          {{- with .Values.postgres.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.postgres.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
  volumeClaimTemplates:
    {{- if not .Values.postgres.persistence.existingClaim }}
    - metadata:
        name: data
        {{- with .Values.postgres.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        storageClassName: {{ .Values.postgres.persistence.storageClass | quote }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size }}
        {{- with .Values.postgres.persistence.selector}}
        selector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
    {{- end }}
