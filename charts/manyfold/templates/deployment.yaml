apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "boilerplate.names.fullname" . }}
  labels:
    {{- include "boilerplate.labels.standard" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "boilerplate.labels.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "boilerplate.labels.standard" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "boilerplate.images.image" (dict "image" .Values.image "global" .Values.global "chart" .Chart) }}
          imagePullPolicy: {{ include "boilerplate.images.pullPolicy" (dict "image" .Values.image "global" .Values.global "chart" .Chart) }}
          {{- if or .Values.secret_key_base.secret .Values.secret_key_base.secretKeyRef }}
          env:
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret_key_base.secret }}
                    name: {{ include "boilerplate.names.fullname" . }}
                    key: "SECRET_KEY_BASE"
                  {{- else }}
                    name: {{ .Values.secret_key_base.secretKeyRef.name }}
                    key: {{ .Values.secret_key_base.secretKeyRef.key }}
                  {{- end }}
          {{- end }}
          {{- include "boilerplate.environment.env" (dict "env" .Values.env "global" .Values.global) | nindent 10 }}
          {{- with .Values.secret_key_base.secretName }}
          envFrom:
            - secretRef:
                name: {{ . }}
          {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.persistence.config.enabled }}
            - name: {{ .Values.persistence.config.name | default "config" }}
              mountPath: {{ .Values.persistence.config.mountPath | default "/config" }}
            {{- end }}
            {{- if .Values.persistence.libraries.enabled }}
            - name: {{ .Values.persistence.libraries.name | default "libraries" }}
              mountPath: {{ .Values.persistence.libraries.mountPath | default "/libraries" }}
            {{- end }}
            {{- include "boilerplate.storage.extraVolumeMounts" . | nindent 12 }}
          ports:
            - name: http
              containerPort: 3214
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        {{- if .Values.persistence.config.enabled }}
        - name: {{ .Values.persistence.config.name | default "config" }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.config.existingClaim | default (printf "%s-config" (include "boilerplate.names.fullname" .)) }}
        {{- end }}
        {{- if .Values.persistence.libraries.enabled }}
        - name: {{ .Values.persistence.libraries.name | default "libraries" }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.libraries.existingClaim | default (printf "%s-libraries" (include "boilerplate.names.fullname" .)) }}
        {{- end }}
        {{- include "boilerplate.storage.extraVolumes" . | nindent 8 }}
