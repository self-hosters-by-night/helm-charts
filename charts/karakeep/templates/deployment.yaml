{{- $configMaps := prepend .Values.envFrom.configMaps (dict "name" (include "boilerplate.names.fullname" .)) }}
{{- $envFrom := dict "configMaps" $configMaps "secrets" .Values.envFrom.secrets }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "boilerplate.names.fullname" . }}
  labels:
    {{- include "boilerplate.labels.standard" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "boilerplate.labels.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "boilerplate.labels.podLabels" . | nindent 8 }}
    spec:
      {{- include "boilerplate.images.pullSecrets"
        ( dict
          "globalImagePullSecrets" .Values.global.imagePullSecrets
          "localImagePullSecrets" .Values.image.pullSecrets
        ) | nindent 6
      }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- include "boilerplate.images.image"
            ( dict
              "root" .
              "image" .Values.image
            ) | nindent 10
          }}
          {{- include "boilerplate.images.pullPolicy"
            ( dict
              "globalPullPolicy" .Values.global.imagePullPolicy
              "localPullPolicy" .Values.image.pullPolicy
            ) | nindent 10
          }}
          {{- include "boilerplate.environment.env" ( dict "env" .Values.env "global" .Values.global ) | nindent 10 }}
          {{- include "boilerplate.environment.envFrom" ( dict "envFrom" .Values.envFrom "global" .Values.global ) | nindent 10 }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
            {{- include "boilerplate.storage.extraVolumeMounts" . | nindent 12 }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "boilerplate.names.fullname" . }}-data
        {{- else }}
        - name: data
          emptyDir: {}
        {{- end -}}
        {{- include "boilerplate.storage.extraVolumes" . | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
