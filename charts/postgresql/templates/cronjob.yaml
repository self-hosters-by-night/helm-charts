{{- if .Values.backup.enabled -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "boilerplate.names.name" . }}-backup
  {{- with .Values.global.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "boilerplate.labels.selectorLabels" . | nindent 4 }}
    {{- with .Values.postgres.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  schedule: {{ .Values.backup.schedule }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "boilerplate.labels.selectorLabels" . | nindent 12 }}
            {{- with .Values.postgres.labels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          restartPolicy: OnFailure
          containers:
            - name: backup
              image: {{ include "boilerplate.images.image" (dict "image" .Values.global.image "global" .Values.global "chart" .Chart) }}
              imagePullPolicy: {{ .Values.global.image.pullPolicy }}
              command:
                - "/bin/sh"
                - "-c"
                - |
                  pg_dump postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@{{ include "boilerplate.names.name" . }}:5432/${POSTGRES_DB} -Fc -f /backups/$(date '+%Y-%m-%dT%H:%M:%SZ').sql
              {{- with .Values.env }}
              env:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- if or .Values.configMapRefs .Values.credentials.externalSecret.enabled .Values.secretRefs }}
              envFrom:
                {{- range .Values.configMapRefs }}
                - configMapRef:
                    name: {{ .name }}
                {{- end }}
                {{- if .Values.credentials.externalSecret.enabled }}
                - secretRef:
                    name: {{ .Values.credentials.externalSecret.name }}
                {{- end }}
                {{- range .Values.secretRefs }}
                - secretRef:
                    name: {{ .name }}
                {{- end }}
              {{- end }}
              volumeMounts:
                - name: backups
                  mountPath: /backups
              {{- with .Values.global.securityContext }}
              securityContext:
                {{- toYaml . | nindent 16 }}
              {{- end }}
          volumes:
            - name: backups
              {{- if .Values.backup.persistence.enabled }}
              persistentVolumeClaim:
                claimName: {{ include "boilerplate.names.name" . }}-backups
              {{- else }}
              emptyDir: {}
              {{- end }}
{{- end }}
